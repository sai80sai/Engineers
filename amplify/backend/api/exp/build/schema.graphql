type Login @aws_iam @aws_api_key {
  id: ID!
  Name: String
  Password: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelLoginConnection @aws_api_key @aws_iam {
  items: [Login]!
  nextToken: String
}

input ModelLoginFilterInput {
  id: ModelIDInput
  Name: ModelStringInput
  Password: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelLoginFilterInput]
  or: [ModelLoginFilterInput]
  not: ModelLoginFilterInput
}

type Query {
  getLogin(id: ID!): Login @aws_api_key @aws_iam
  listLogins(filter: ModelLoginFilterInput, limit: Int, nextToken: String): ModelLoginConnection @aws_api_key @aws_iam
}

input ModelLoginConditionInput {
  Name: ModelStringInput
  Password: ModelStringInput
  and: [ModelLoginConditionInput]
  or: [ModelLoginConditionInput]
  not: ModelLoginConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateLoginInput {
  id: ID
  Name: String
  Password: String
}

input UpdateLoginInput {
  id: ID!
  Name: String
  Password: String
}

input DeleteLoginInput {
  id: ID!
}

type Mutation {
  createLogin(input: CreateLoginInput!, condition: ModelLoginConditionInput): Login @aws_api_key @aws_iam
  updateLogin(input: UpdateLoginInput!, condition: ModelLoginConditionInput): Login @aws_api_key @aws_iam
  deleteLogin(input: DeleteLoginInput!, condition: ModelLoginConditionInput): Login @aws_api_key @aws_iam
}

input ModelSubscriptionLoginFilterInput {
  id: ModelSubscriptionIDInput
  Name: ModelSubscriptionStringInput
  Password: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionLoginFilterInput]
  or: [ModelSubscriptionLoginFilterInput]
}

type Subscription {
  onCreateLogin(filter: ModelSubscriptionLoginFilterInput): Login @aws_subscribe(mutations: ["createLogin"]) @aws_api_key @aws_iam
  onUpdateLogin(filter: ModelSubscriptionLoginFilterInput): Login @aws_subscribe(mutations: ["updateLogin"]) @aws_api_key @aws_iam
  onDeleteLogin(filter: ModelSubscriptionLoginFilterInput): Login @aws_subscribe(mutations: ["deleteLogin"]) @aws_api_key @aws_iam
}
